{"version":3,"sources":["actions/listsActions.js","actions/cardActions.js","actions/index.js","components/ModalSideList.js","components/TrelloCard.js","components/ActionButton.js","components/TrelloList.js","components/Header.js","components/Sidebar.js","components/App.js","reducers/listsReducer.js","reducers/index.js","store/index.js","index.js"],"names":["addList","title","type","CONSTANTS","ADD_LIST","payload","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","DRAG_HAPPENED","addCard","listId","text","ADD_CARD","editCard","cardId","message","EDIT_CARD","DELETE_CARD","EDIT_DESCRIPTION","style","display","alignItems","backgroundColor","padding","borderRadius","fontFamily","ModalSideList","Icon","fontSize","marginLeft","cursor","color","marginRight","onClick","this","openEdit","props","icon","React","Component","CardContainer","styled","div","Modalstyle","position","top","left","transform","width","bgcolor","boxShadow","p","minHeight","EditButtonIcon","TrelloCard","handleInputChange","e","setState","target","value","dispatch","list","id","state","description","showEdit","showText","showModal","bind","closeTextArea","openModal","handleCloseModal","String","index","provided","ref","innerRef","draggableProps","dragHandleProps","sx","maxWidth","CardContent","Typography","gutterBottom","autoFocus","onBlur","onChange","resize","outline","border","flexDirection","Button","variant","marginBottom","onMouseDown","Modal","open","onClose","Box","component","listTitle","Grid","container","spacing","item","xs","mt","connect","FormButtonGroup","ActionButton","formOpen","openForm","closeForm","handleAddList","handleAddCard","renderAddButton","buttonText","buttonTextOpacity","buttonTextColor","buttonTextBackground","styles","openFormButtonGroup","opacity","background","renderForm","placeholder","buttonTitle","formWidth","overflow","height","paddingLeft","formButtonGroup","marginTop","List","Title","h4","card","TrelloList","cards","droppableId","droppableProps","map","HeaderContainer","HeaderBrand","span","Header","SidebarContainer","Sidebar","MainContainer","ListContainer","AppContainer","App","onDragEnd","result","destination","source","document","THEME","createTheme","typography","lists","className","ThemeProvider","theme","direction","initialState","listsReducer","action","newList","newCard","console","log","newState","Card","find","splice","listStart","listEnd","combineReducers","store","createStore","rootReducer","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.09e8f43d.chunk.js","sourcesContent":["import {CONSTANTS} from \"../actions\";\r\n\r\nexport const addList = (title) => {\r\n  return {\r\n    type: CONSTANTS.ADD_LIST,\r\n    payload: title\r\n  };\r\n};\r\n\r\nexport const sort = (\r\n  droppableIdStart,\r\n  droppableIdEnd,\r\n  droppableIndexStart,\r\n  droppableIndexEnd,\r\n  draggableId,\r\n  type\r\n) => {\r\n  return {\r\n    type: CONSTANTS.DRAG_HAPPENED,\r\n    payload: {\r\n      droppableIdStart,\r\n      droppableIdEnd,\r\n      droppableIndexStart,\r\n      droppableIndexEnd,\r\n      draggableId,\r\n      type\r\n    }\r\n  }\r\n}\r\n\r\n","import {CONSTANTS} from \"../actions\";\r\n\r\nexport const addCard = (listId, text) => {\r\n  return {\r\n    type: CONSTANTS.ADD_CARD,\r\n    payload: {listId, text}\r\n  };\r\n};\r\n\r\nexport const deleteCard = (listId, cardId) => {\r\n  return {\r\n    type: CONSTANTS.DELETE_CARD,\r\n    payload: {listId, cardId}\r\n  }\r\n}\r\n\r\nexport const editCard = (listId, cardId, message) => {\r\n  return {\r\n    type: CONSTANTS.EDIT_CARD,\r\n    payload: {listId, cardId, message}\r\n  }\r\n}\r\n\r\nexport const editDescription = (listId, cardId, description) => {\r\n  return {\r\n    type: CONSTANTS.EDIT_DESCRIPTION,\r\n    payload: {listId, cardId, description}\r\n  }\r\n}","export * from \"./listsActions\";\r\nexport * from \"./cardActions\";\r\nexport const CONSTANTS = {\r\n  ADD_CARD: \"ADD_CARD\",\r\n  DELETE_CARD: \"DELETE_CARD\",\r\n  EDIT_CARD: \"EDIT_CARD\",\r\n  EDIT_DESCRIPTION: \"EDIT_DESCRIPTION\",\r\n  ADD_LIST: \"ADD_LIST\",\r\n  DRAG_HAPPENED: \"DRAG_HAPPENED\"\r\n}","import React from \"react\";\r\nimport Icon from '@mui/material/Icon';\r\n\r\nconst style = {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  backgroundColor: 'rgba(0, 0, 0, 0.1)',\r\n  padding: '.25em',\r\n  borderRadius: 5,\r\n  fontFamily: 'Roboto',\r\n};\r\n\r\nclass ModalSideList extends React.Component {\r\n  render () {\r\n    return (\r\n      <div style={style}>\r\n        <Icon fontSize='small' style={{marginLeft: 8, cursor: \"pointer\", color: \"black\", marginRight: 4}} onClick={this.openEdit}>\r\n            {this.props.icon}\r\n        </Icon>\r\n        {this.props.text}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ModalSideList;","import React from 'react'\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Icon from '@mui/material/Icon';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport {Draggable} from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteCard, editCard } from \"../actions\";\r\nimport Dialog from '@mui/material/Dialog';\r\n\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport TextArea from 'react-textarea-autosize';\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport Grid from '@mui/material/Grid';\r\nimport ModalSideList from './ModalSideList';\r\n\r\nconst CardContainer = styled.div`\r\n  margin-bottom: .5em;\r\n`\r\nconst Modalstyle = {\r\n  position: 'absolute',\r\n  top: '40vh',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: '50vw',\r\n  bgcolor: 'background.paper',\r\n  // border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n  minHeight: '50vh',\r\n  '&:hover' :{\r\n\r\n  }\r\n};\r\n\r\nconst EditButtonIcon = styled.div`\r\n  margin-left: 8px;\r\n  cursor: pointer; \r\n  color: black;\r\n  /* display: none; */\r\n  &:hover {\r\n    display: inline;\r\n  }\r\n`\r\n\r\n\r\nclass TrelloCard extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: this.props.message,\r\n      description: this.props.description,\r\n      showEdit: \"none\",\r\n      showText: \"inline\",\r\n      showModal: false,\r\n    }\r\n\r\n\r\n    this.openEdit = this.openEdit.bind(this);\r\n    this.closeTextArea = this.closeTextArea.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.openModal = this.openModal.bind(this);\r\n    this.handleCloseModal = this.handleCloseModal.bind(this);\r\n  }\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({\r\n      message: e.target.value\r\n    })\r\n    const { dispatch } = this.props;\r\n    dispatch(editCard(this.props.list, this.props.id, this.state.message));\r\n\r\n  }\r\n\r\n  closeTextArea() {\r\n    this.setState({\r\n      showText: \"inline\",\r\n      showEdit: \"none\"\r\n    })\r\n    const { dispatch } = this.props;\r\n    dispatch(editCard(this.props.list, this.props.id, this.state.message));\r\n  }\r\n\r\n  openEdit() {\r\n    this.setState({\r\n      showText: \"none\",\r\n      showEdit: \"inline\"\r\n    })\r\n  }\r\n\r\n  openModal () {\r\n    this.setState({\r\n      showModal: true\r\n    })\r\n  };\r\n  handleCloseModal () {\r\n    this.setState({\r\n      showModal: false\r\n    })\r\n  };\r\n\r\n  render () {\r\n  \r\n  return (\r\n    <Draggable draggableId={String(this.props.id)} index={this.props.index}>\r\n      { (provided) => (\r\n        <CardContainer ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n        <Card key={this.props.id} sx={{ maxWidth: 300 }} >\r\n        <CardContent style={{display: \"flex\"}}>\r\n          <Typography onClick={this.openModal} id=\"\" sx={{ fontSize: 14 }} style={{display:this.state.showText}} color=\"text.secondary\" gutterBottom>\r\n            {this.props.message}\r\n            \r\n          </Typography>\r\n          <TextArea\r\n                  autoFocus onBlur={this.closeTextArea}\r\n                  value={this.state.message} \r\n                  onChange={this.handleInputChange}\r\n                  style={{\r\n                    display: this.state.showEdit,\r\n                    resize: \"none\",\r\n                    width: \"100%\",\r\n                    outline: \"1px\",\r\n                    border: \"1px\",\r\n                    \r\n                  }} />\r\n          <div style={{marginLeft: \"auto\", display: \"flex\", flexDirection: \"column\"}}>\r\n            {/* < AlertDialog style={{marginLeft: \"auto\"}} list={this.props.list} index={this.props.index} yesFunction={this.deleteCard}/> */}\r\n          <EditButtonIcon>\r\n            <Icon fontSize='small' style={{marginLeft: 8, cursor: \"pointer\", color: \"gray\", fontSize: 14}} onClick={this.openEdit}>\r\n            edit\r\n            </Icon>\r\n          </EditButtonIcon>\r\n          </div>\r\n          \r\n        </CardContent>\r\n        <Button variant=\"contained\" \r\n                style={{fontSize: \"12px\", color: \"white\", backgroundColor:\"#5aac44\", display: this.state.showEdit, marginLeft: 8, marginBottom: 8}}\r\n                onMouseDown={this.closeTextArea}>\r\n                Finish Editing\r\n        </Button>\r\n        <div onClick={this.openModal} >\r\n        <Icon fontSize='small' style={{marginLeft: 8, cursor: \"pointer\", color: \"gray\"}} onClick={this.openEdit}>\r\n            visibility\r\n        </Icon>\r\n        </div>\r\n        {/* < CardModal /> */}\r\n        <Modal\r\n          open={this.state.showModal}\r\n          onClose={this.handleCloseModal}\r\n          onBlur={this.handleCloseModal}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box sx={Modalstyle}>\r\n            <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n              {this.state.message}\r\n              <p style={{fontSize: 12}}>In list {this.props.listTitle} </p>\r\n            </Typography>\r\n            <Grid container spacing={2}>\r\n            <Grid item xs={10}>\r\n            <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n              <b>Description:</b> <br/>\r\n              { this.state.description !== \"\" ? this.state.description : \"Add More detailed description\"}\r\n              \r\n            </Typography>\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n            <Typography  sx={{ fontSize: 12 }}>\r\n              Add to card\r\n            </Typography>\r\n            < ModalSideList icon=\"person\" text=\"Members\"/>\r\n            </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Modal>\r\n        </Card>\r\n        </CardContainer>\r\n        \r\n      )}\r\n    </Draggable>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction AlertDialog(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const list = props.list;\r\n  const index = props.index;\r\n\r\n  const dispatch = useDispatch();\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    console.log(\"User has confirmed deletion of\", list, \"index\", index);\r\n    dispatch(deleteCard(list, index));\r\n    setOpen(false);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div >\r\n      <Icon fontSize='small' style={{marginLeft: 8, cursor: \"pointer\", color: \"red\"}} onClick={handleClickOpen}>\r\n        close\r\n      </Icon>\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Delete this task?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure you want to delete this task? This cannot be undone.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>No</Button>\r\n          <Button key=\"yes\" onClick={handleConfirm} autoFocus>\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default connect() (TrelloCard);","import React from 'react';\r\nimport Icon from '@mui/material/Icon';\r\nimport Card from '@mui/material/Card';\r\nimport TextArea from 'react-textarea-autosize';\r\n// import CardActions from '@mui/material/CardActions';\r\n// import CardContent from '@mui/material/CardContent';\r\nimport Modal from '@mui/material/Modal'\r\nimport Button from '@mui/material/Button';\r\nimport styled from 'styled-components';\r\n// import Typography from '@mui/material/Typography';\r\nimport { connect } from \"react-redux\";\r\nimport { addList, addCard } from \"../actions\";\r\n\r\nconst  openFormButtonGroup = styled.div`\r\n    display: \"flex\";\r\n    align-items: \"center\";\r\n    cursor: \"pointer\";\r\n    border-radius: 3px;\r\n    height: 36px;\r\n    width: 300px;\r\n    padding-left: 10px;\r\n  `\r\nconst FormButtonGroup = styled.div`\r\n    margin-top: 8px;\r\n    display: flex;\r\n    alignItems: center;\r\n`\r\nclass ActionButton extends React.Component {\r\n  state = {\r\n    formOpen: false,\r\n    text: \"\"\r\n  }\r\n\r\n  openForm = () => {\r\n    this.setState({formOpen: true});\r\n  }\r\n\r\n  closeForm = (e) => {\r\n    this.setState({formOpen: false});\r\n  }\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({\r\n      text: e.target.value\r\n    })\r\n  }\r\n\r\n  handleAddList = () => {\r\n    const { dispatch } = this.props;\r\n    const {text} = this.state;\r\n\r\n    if (text) {\r\n      this.setState({\r\n        text: \"\"\r\n      })\r\n      dispatch(addList(text))\r\n\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  handleAddCard = () => {\r\n    const { dispatch, listId } = this.props;\r\n    const { text } = this.state;\r\n    if (text) {\r\n      this.setState({\r\n        text: \"\"\r\n      })\r\n      dispatch(addCard(listId, text))\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  renderAddButton = () => {\r\n    const { list } = this.props;\r\n    const buttonText = list ? \"Add another list\" : \"Add another card\";\r\n    const buttonTextOpacity = list ? 1 : 0.5;\r\n    const buttonTextColor = list ? \"white\" : \"inherit\";\r\n    const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\r\n    return (\r\n        <div \r\n              onClick={this.openForm}\r\n              style={{\r\n                    ...styles.openFormButtonGroup,\r\n                    opacity:  buttonTextOpacity, \r\n                    color: buttonTextColor, \r\n                    background: buttonTextBackground\r\n              }}>\r\n        <Icon>add</Icon>\r\n        <p>{buttonText}</p>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  renderForm = () => {\r\n    const { list } = this.props;\r\n\r\n    const placeholder = list ? \"Enter list title...\" : \"Enter title for this card...\";\r\n    const buttonTitle = list ? \"Add List\" : \"Add Card\";\r\n    const formWidth = list ? 300 : \"inherit\";\r\n    return (\r\n    <div style = {{width: {formWidth}}}> \r\n      <Card style={{\r\n                      overflow: \"visible\",\r\n                      minHeight: 80,\r\n                      width: {formWidth},\r\n                      padding: \"6px 8px 2px\",\r\n                      marginBottom: 4\r\n                  }}>\r\n        <TextArea placeholder={placeholder} \r\n                  autoFocus onBlur={this.closeForm}\r\n                  value={this.state.text} \r\n                  onChange={this.handleInputChange}\r\n                  style={{\r\n                    resize: \"none\",\r\n                    width: \"100%\",\r\n                    outline: \"none\",\r\n                    border: \"none\",\r\n                    \r\n                  }}\r\n                  />\r\n      </Card>\r\n      <FormButtonGroup>\r\n        {/* We use onMouseDown because it will fire before our onBlur function. */}\r\n        <Button variant=\"contained\" \r\n                style={{color: \"white\", backgroundColor:\"#5aac44\"}}\r\n                onMouseDown={list ? this.handleAddList : this.handleAddCard}>\r\n        {buttonTitle}\r\n        </Button>\r\n        <Icon style={{marginLeft: 8, cursor: \"pointer\", color: \"red\"}} onClick={this.closeForm}>close</Icon>\r\n      </FormButtonGroup>\r\n    </div>\r\n    )\r\n  }\r\n\r\n  render () {\r\n    return this.state.formOpen ? this.renderForm() : this.renderAddButton();\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  openFormButtonGroup: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n    borderRadius: 3,\r\n    height: 36,\r\n    width: 300,\r\n    paddingLeft: 10\r\n  },\r\n  formButtonGroup: {\r\n    marginTop: 8,\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n}\r\n\r\n\r\nexport default connect() (ActionButton);","import { black } from 'material-ui/styles/colors';\r\n// import {boxShadow} from 'jss-plugin-expand';\r\nimport React from 'react';\r\nimport Card from './TrelloCard';\r\nimport ActionButton from './ActionButton';\r\nimport {Droppable, Draggable} from 'react-beautiful-dnd';\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst List = styled.div`\r\n    background-color: #dfe3e6;\r\n    border-radius: .4em;\r\n    width: 300px;\r\n    height: 100%;\r\n    padding: .5em;\r\n    margin-right: .5em;\r\n    margin-bottom: 1em;\r\n\r\n    /* @media (max-width: 402px) {\r\n      width: calc(100vw - 6em);\r\n      \r\n    } */\r\n    @media (max-width: 366px) {\r\n      width: calc(100vw - 4em);\r\n    }\r\n`\r\n\r\nconst Title = styled.h4`\r\n  font-family: \"Roboto\";\r\n`\r\n\r\nconst TrelloList = ({title, cards, listId, index}) => {\r\n  \r\n  return (\r\n    <Draggable draggableId={String(listId)} index={index}>\r\n      {(provided) => (\r\n    <List {...provided.draggableProps} ref={provided.innerRef} {...provided.dragHandleProps}>\r\n    <Droppable droppableId={String(listId)}>\r\n      {/* Everything inside a droppable must be within a React render props function */}\r\n      {(provided) => (\r\n         <div {...provided.droppableProps} ref={provided.innerRef}> \r\n          <Title>{title}</Title>\r\n          {cards.map((card, index) => (< Card listTitle={title} list={listId} message={card.text} description={card.description} key={card.id} id={card.id} style={styles.card} index={index} />\r\n          ))}\r\n          {provided.placeholder}\r\n          < ActionButton listId={listId} />\r\n        </div> \r\n      )}\r\n    </Droppable>\r\n    </List>\r\n    )}\r\n    </Draggable>\r\n    \r\n  )\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    backgroundColor: \"#dfe3e6\",\r\n    borderRadius: 3,\r\n    width: 300,\r\n    height: \"100%\",\r\n    padding: 8,\r\n    marginRight: 8,\r\n    marginBottom: 8\r\n  },\r\n\r\n  title: {\r\n    fontFamily: \"Roboto\"\r\n  },\r\n\r\n  card: {\r\n    marginBottom: 8\r\n  }\r\n}\r\n\r\nexport default TrelloList;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HeaderContainer = styled.div`\r\n  background-color: #343880;\r\n  height: 3em;\r\n  min-width: calc(100vw -1em);\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 1em;\r\n`\r\n\r\nconst HeaderBrand = styled.span`\r\n  font-family: Roboto;\r\n  font-size: 1.5em;\r\n  font-weight: 500;\r\n`\r\n\r\n\r\nclass Header extends React.Component {\r\n  render () {\r\n    return (\r\n      <HeaderContainer>\r\n        <HeaderBrand>Frello</HeaderBrand>\r\n        </HeaderContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SidebarContainer = styled.div`\r\n  width: 3em;\r\n  flex-shrink: 0;\r\n  background: rgb(84,90,204);\r\n  background: linear-gradient(90deg, rgba(84,90,204,1) 81%, rgba(96,103,231,1) 100%); \r\n  min-height: calc(100vh - 5em);\r\n  @media (max-width: 500px) {\r\n    width:2em;\r\n  }\r\n`\r\n\r\n\r\nclass Sidebar extends React.Component {\r\n  render () {\r\n    return (\r\n      <SidebarContainer>\r\n        \r\n      </SidebarContainer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Sidebar","import React, {Component} from 'react';\nimport TrelloList from './TrelloList';\nimport ActionButton from './ActionButton';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport {connect} from \"react-redux\";\nimport {DragDropContext, Droppable} from \"react-beautiful-dnd\";\nimport {sort} from \"../actions\";\nimport styled from \"styled-components\";\n\nconst MainContainer = styled.div`\n  display: flex;\n`\n\n\nconst ListContainer = styled.div`\n      display: flex;\n      flex-direction: row;\n      @media (max-width: 500px) {\n        flex-direction: column;\n        flex-wrap: wrap;\n    }\n`;\n\nconst AppContainer = styled.div`\n      background-color: #686FFF;\n      min-width: calc(100vw - 5em);\n      min-height: calc(100vh - 5em);\n      padding: 1em;\n      @media (max-width: 500px) {\n        min-width: calc(100vw - 4em);\n      }\n\n`;\n\nclass App extends Component {\n  onDragEnd = (result) => {\n    //Reordering logic to be done\n    const { destination, source, draggableId, type} = result;\n\n    if(!destination) {\n      return;\n    }\n\n    this.props.dispatch(sort(\n      source.droppableId,\n      destination.droppableId,\n      source.index,\n      destination.index,\n      draggableId,\n      type\n    ));\n  }\n\n  componentDidMount() {\n    document.title=\"(F)rello\";\n  }\n  render () {\n    const THEME = createTheme({\n      typography: {\n       \"fontFamily\": `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n       \"fontSize\": 14,\n       \"fontWeightLight\": 300,\n       \"fontWeightRegular\": 400,\n       \"fontWeightMedium\": 500\n      }\n    });\n\n    const {lists} = this.props;\n    return (\n      <div>\n      <Header />\n      <MainContainer>\n      <Sidebar />\n      <DragDropContext onDragEnd={this.onDragEnd}> \n      <AppContainer className=\"App\">\n        <ThemeProvider theme={THEME}>\n          <Droppable droppableId=\"all-list\" direction=\"horizontal\" type=\"list\">\n            {provided => (\n                      \n          <ListContainer {...provided.droppableProps} ref={provided.innerRef}>\n          {lists.map((list,index) => (\n          <TrelloList key={list.id} listId={list.id} title={list.title} cards={list.cards} index={index} />\n          ))}\n          {provided.placeholder}\n          <ActionButton list />\n          </ListContainer>\n          \n          )}\n          </Droppable>\n        </ThemeProvider>\n      </AppContainer>\n      </DragDropContext>\n      </MainContainer>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  listsContainer: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n}\n\nconst mapStateToProps = state => ({\n  lists: state.lists\n})\n\nexport default connect(mapStateToProps) (App);\n","import {CONSTANTS} from \"../actions\";\r\n// import initialState from \"./initLists\";\r\n\r\nlet listId = 2;\r\nlet cardId = 5;\r\nconst initialState = [\r\n  {\r\n    title: \"(F)rello\",\r\n    id: `list-${0}`,\r\n    cards: [\r\n      {\r\n        id: `card-${0}`,\r\n        text: \"Create an interactive UI.\",\r\n        description: \"I wanted to use project to develop my abilities to create interactive User interfaces that allow web-users to create data on a website using a GUI.\"\r\n      },\r\n      {\r\n        id: `card-${1}`,\r\n        text: \"Use React, React-Redux and Material UI to create interface.\",\r\n        description: \"I wanted to use this project to develop familiarity with React-Redux, which seemed a better solution for this project, given the actions needed.\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: \"Limitations\",\r\n    id: `list-${1}`,\r\n    cards: [\r\n      {\r\n        id: `card-${2}`,\r\n        text: \"No back-end\",\r\n        description: \"This is just a small project and I haven't yet hooked it up to a backend to persist the lists.\"\r\n      },\r\n      {\r\n        id: `card-${3}`,\r\n        text: \"Single board\",\r\n        description: \"I plan to expand on this by adding the ability to create multiple boards and switch between them using an expandable sidebar.\"\r\n      },\r\n      {\r\n        id: `card-${4}`,\r\n        text: \"Functionality not complete\",\r\n        description: \"You can add new cards, create a new list and move cards and lists around the area.\"\r\n      }\r\n    ]\r\n  }  \r\n]\r\n\r\nconst listsReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case CONSTANTS.ADD_LIST:\r\n      const newList = {\r\n        title: action.payload,\r\n        cards: [],\r\n        id: `list-${listId}`\r\n      }\r\n      listId += 1;\r\n      return [...state, newList];\r\n\r\n    case CONSTANTS.ADD_CARD: {\r\n      const newCard = {\r\n        description: \"\",\r\n        text: action.payload.text,\r\n        id: `card-${cardId}`\r\n      }\r\n      cardId+= 1;\r\n      console.log(\"Action received\", action);\r\n      const newState = state.map(list => {\r\n        if(list.id === action.payload.listId) {\r\n          return {\r\n            ...list,\r\n            cards: [...list.cards, newCard]\r\n          }\r\n        } else {\r\n          return list;\r\n        }\r\n      })\r\n      return newState;\r\n    }\r\n\r\n    case CONSTANTS.DELETE_CARD: {\r\n      const Card = {\r\n        id: action.payload.cardId\r\n      }\r\n      console.log(\"Delete card action received\", action);\r\n      const newState = [...state];\r\n      const list = state.find(list => action.payload.listId === list.id);\r\n      list.cards.splice(Card.id, 1);\r\n\r\n      return newState;\r\n    }\r\n\r\n    case CONSTANTS.EDIT_CARD: {\r\n      console.log(\"Action received\", action);\r\n      const newState = [...state];\r\n      const cardId = action.payload.cardId;\r\n      const list = state.find(list => action.payload.listId === list.id);\r\n      const card = list.cards.find(card => cardId === card.id)\r\n      card.text = action.payload.message;\r\n\r\n      return newState;\r\n    }\r\n\r\n    case CONSTANTS.DRAG_HAPPENED:\r\n      const {\r\n        droppableIdStart,\r\n        droppableIdEnd,\r\n        droppableIndexStart,\r\n        droppableIndexEnd,\r\n        draggableId,\r\n        type\r\n      } = action.payload;\r\n      const newState = [...state];\r\n      //Dragging list\r\n\r\n      if(type === \"list\") {\r\n        const list = newState.splice(droppableIndexStart, 1);\r\n        newState.splice(droppableIndexEnd, 0, ...list);\r\n        return newState;\r\n      }\r\n\r\n      //When card is dropped within the same list\r\n      if (droppableIdStart === droppableIdEnd) {\r\n        const list = state.find(list => droppableIdStart === list.id);\r\n        const card = list.cards.splice(droppableIndexStart, 1);\r\n        list.cards.splice(droppableIndexEnd, 0, ...card)\r\n      }\r\n\r\n      //When dropped into another list\r\n      if (droppableIdStart !== droppableIdEnd) {\r\n        //Find id of the list where the drag started\r\n        const listStart = state.find(list => droppableIdStart === list.id);\r\n        //Remove the card from the cards array\r\n        const card = listStart.cards.splice(droppableIndexStart, 1);\r\n        //Find the list where the drag ended\r\n        const listEnd = state.find(list => droppableIdEnd === list.id);\r\n\r\n        //Put the card in the new list\r\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card)\r\n      }\r\n      return newState;\r\n       \r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default listsReducer;","import {combineReducers} from 'redux';\r\nimport listsReducer from './listsReducer';\r\n\r\nexport default combineReducers({\r\n  lists: listsReducer\r\n});","import { createStore } from 'redux';\r\n\r\nimport rootReducer from \"../reducers\"\r\n\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store;","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from 'react-redux';\nimport App from \"./components/App\";\nimport store from \"./store\";\nimport './app.css';\nconst rootElement = document.getElementById(\"root\");\n\n\nReactDOM.render(\n  \n  <StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </StrictMode>,\n  rootElement\n);\n\n\n"],"sourceRoot":""}