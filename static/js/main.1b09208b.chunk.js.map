{"version":3,"sources":["components/TrelloCard.js","actions/listsActions.js","actions/cardActions.js","actions/index.js","components/ActionButton.js","components/TrelloList.js","components/Header.js","components/App.js","reducers/listsReducer.js","reducers/index.js","store/index.js","index.js"],"names":["CardContainer","styled","div","TrelloCard","id","message","index","draggableId","String","provided","ref","innerRef","draggableProps","dragHandleProps","Card","sx","maxWidth","CardContent","Typography","fontSize","color","gutterBottom","addList","title","type","CONSTANTS","ADD_LIST","payload","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","DRAG_HAPPENED","addCard","listId","text","ADD_CARD","ActionButton","state","formOpen","openForm","setState","closeForm","e","handleInputChange","target","value","handleAddList","dispatch","props","handleAddCard","renderAddButton","list","buttonText","buttonTextOpacity","buttonTextColor","buttonTextBackground","onClick","style","styles","openFormButtonGroup","opacity","background","Icon","renderForm","placeholder","buttonTitle","overflow","minHeight","minWidth","padding","autoFocus","onBlur","onChange","resize","width","outline","border","formButtonGroup","Button","variant","backgroundColor","onMouseDown","marginLeft","cursor","this","React","Component","display","alignItems","borderRadius","height","paddingLeft","marginTop","connect","List","Title","h4","container","marginRight","fontFamily","card","marginBottom","TrelloList","cards","droppableId","droppableProps","map","HeaderContainer","HeaderBrand","span","Header","ListContainer","AppContainer","App","onDragEnd","result","destination","source","document","THEME","createTheme","typography","lists","className","ThemeProvider","theme","direction","cardId","initialState","listsReducer","action","newList","newCard","console","log","newState","splice","find","listStart","listEnd","combineReducers","store","createStore","rootReducer","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.1b09208b.chunk.js","sourcesContent":["import React from 'react'\r\n// import Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\n// import CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\n// import Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport {Draggable} from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CardContainer = styled.div`\r\n  margin-bottom: .5em;\r\n`\r\nconst TrelloCard = ({id, message, index}) => {\r\n  return (\r\n    <Draggable draggableId={String(id)} index={index}>\r\n      { (provided) => (\r\n        <CardContainer ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n        <Card key={id} sx={{ maxWidth: 300 }}>\r\n        <CardContent>\r\n          <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n            {message}\r\n          </Typography>\r\n        </CardContent>\r\n        </Card>\r\n        </CardContainer>\r\n      )}\r\n    </Draggable>\r\n  )\r\n}\r\n\r\nexport default TrelloCard;","import {CONSTANTS} from \"../actions\";\r\n\r\nexport const addList = (title) => {\r\n  return {\r\n    type: CONSTANTS.ADD_LIST,\r\n    payload: title\r\n  };\r\n};\r\n\r\nexport const sort = (\r\n  droppableIdStart,\r\n  droppableIdEnd,\r\n  droppableIndexStart,\r\n  droppableIndexEnd,\r\n  draggableId,\r\n  type\r\n) => {\r\n  return {\r\n    type: CONSTANTS.DRAG_HAPPENED,\r\n    payload: {\r\n      droppableIdStart,\r\n      droppableIdEnd,\r\n      droppableIndexStart,\r\n      droppableIndexEnd,\r\n      draggableId,\r\n      type\r\n    }\r\n  }\r\n}\r\n\r\n","import {CONSTANTS} from \"../actions\";\r\n\r\nexport const addCard = (listId, text) => {\r\n  return {\r\n    type: CONSTANTS.ADD_CARD,\r\n    payload: {listId, text}\r\n  };\r\n};","export * from \"./listsActions\";\r\nexport * from \"./cardActions\";\r\nexport const CONSTANTS = {\r\n  ADD_CARD: \"ADD_CARD\",\r\n  ADD_LIST: \"ADD_LIST\",\r\n  DRAG_HAPPENED: \"DRAG_HAPPENED\"\r\n}","import React from 'react';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Card from '@mui/material/Card';\r\nimport TextArea from 'react-textarea-autosize';\r\n// import CardActions from '@mui/material/CardActions';\r\n// import CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\n// import Typography from '@mui/material/Typography';\r\nimport { connect } from \"react-redux\";\r\nimport { addList, addCard } from \"../actions\";\r\n\r\nclass ActionButton extends React.Component {\r\n  state = {\r\n    formOpen: false,\r\n    text: \"\"\r\n  }\r\n\r\n  openForm = () => {\r\n    this.setState({formOpen: true});\r\n  }\r\n\r\n  closeForm = (e) => {\r\n    this.setState({formOpen: false});\r\n  }\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({\r\n      text: e.target.value\r\n    })\r\n  }\r\n\r\n  handleAddList = () => {\r\n    const { dispatch } = this.props;\r\n    const {text} = this.state;\r\n\r\n    if (text) {\r\n      this.setState({\r\n        text: \"\"\r\n      })\r\n      dispatch(addList(text))\r\n\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  handleAddCard = () => {\r\n    const { dispatch, listId } = this.props;\r\n    const { text } = this.state;\r\n    if (text) {\r\n      this.setState({\r\n        text: \"\"\r\n      })\r\n      dispatch(addCard(listId, text))\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  renderAddButton = () => {\r\n    const { list } = this.props;\r\n    const buttonText = list ? \"Add another list\" : \"Add another card\";\r\n    const buttonTextOpacity = list ? 1 : 0.5;\r\n    const buttonTextColor = list ? \"white\" : \"inherit\";\r\n    const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\r\n    return (\r\n        <div \r\n              onClick={this.openForm}\r\n              style={{\r\n                    ...styles.openFormButtonGroup,\r\n                    opacity:  buttonTextOpacity, \r\n                    color: buttonTextColor, \r\n                    background: buttonTextBackground\r\n              }}>\r\n        <Icon>add</Icon>\r\n        <p>{buttonText}</p>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  renderForm = () => {\r\n    const { list } = this.props;\r\n\r\n    const placeholder = list ? \"Enter list title...\" : \"Enter title for this card...\";\r\n    const buttonTitle = list ? \"Add List\" : \"Add Card\";\r\n    return (\r\n    <div> \r\n      <Card style={{\r\n                      overflow: \"visible\",\r\n                      minHeight: 80,\r\n                      minWidth: 284,\r\n                      padding: \"6px 8px 2px\"\r\n                  }}>\r\n        <TextArea placeholder={placeholder} \r\n                  autoFocus onBlur={this.closeForm} \r\n                  value={this.state.text} \r\n                  onChange={this.handleInputChange}\r\n                  style={{\r\n                    resize: \"none\",\r\n                    width: \"100%\",\r\n                    outline: \"none\",\r\n                    border: \"none\"\r\n                  }}\r\n                  />\r\n      </Card>\r\n      <div style={styles.formButtonGroup}>\r\n        {/* We use onMouseDown because it will fire before our onBlur function. */}\r\n        <Button variant=\"contained\" \r\n                style={{color: \"white\", backgroundColor:\"#5aac44\"}}\r\n                onMouseDown={list ? this.handleAddList : this.handleAddCard}>\r\n        {buttonTitle}\r\n        </Button>\r\n        <Icon style={{marginLeft: 8, cursor: \"pointer\",}}>close</Icon>\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n\r\n  render () {\r\n    return this.state.formOpen ? this.renderForm() : this.renderAddButton();\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  openFormButtonGroup: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n    borderRadius: 3,\r\n    height: 36,\r\n    width: 300,\r\n    paddingLeft: 10\r\n  },\r\n  formButtonGroup: {\r\n    marginTop: 8,\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n}\r\n\r\n\r\nexport default connect() (ActionButton);","import { black } from 'material-ui/styles/colors';\r\n// import {boxShadow} from 'jss-plugin-expand';\r\nimport React from 'react';\r\nimport Card from './TrelloCard';\r\nimport ActionButton from './ActionButton';\r\nimport {Droppable, Draggable} from 'react-beautiful-dnd';\r\nimport styled from \"styled-components\";\r\n\r\nconst List = styled.div`\r\n    background-color: #dfe3e6;\r\n    border-radius: .4em;\r\n    width: 300;\r\n    height: 100%;\r\n    padding: .5em;\r\n    margin-right: .5em;\r\n`\r\n\r\nconst Title = styled.h4`\r\n  font-family: \"Roboto\";\r\n`\r\n\r\nconst TrelloList = ({title, cards, listId, index}) => {\r\n  \r\n  return (\r\n    <Draggable draggableId={String(listId)} index={index}>\r\n      {(provided) => (\r\n    <List {...provided.draggableProps} ref={provided.innerRef} {...provided.dragHandleProps}>\r\n    <Droppable droppableId={String(listId)}>\r\n      {/* Everything inside a droppable must be within a React render props function */}\r\n      {(provided) => (\r\n         <div {...provided.droppableProps} ref={provided.innerRef}> \r\n          <Title>{title}</Title>\r\n          {cards.map((card, index) => (< Card message={card.text} key={card.id} id={card.id} style={styles.card} index={index} />\r\n          ))}\r\n          {provided.placeholder}\r\n          < ActionButton listId={listId} />\r\n        </div> \r\n      )}\r\n    </Droppable>\r\n    </List>\r\n    )}\r\n    </Draggable>\r\n    \r\n  )\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    backgroundColor: \"#dfe3e6\",\r\n    borderRadius: 3,\r\n    width: 300,\r\n    height: \"100%\",\r\n    padding: 8,\r\n    marginRight: 8\r\n  },\r\n\r\n  title: {\r\n    fontFamily: \"Roboto\"\r\n  },\r\n\r\n  card: {\r\n    marginBottom: 8\r\n  }\r\n}\r\n\r\nexport default TrelloList;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HeaderContainer = styled.div`\r\n  background-color: #343880;\r\n  height: 3em;\r\n  min-width: calc(100vw -1em);\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 1em;\r\n`\r\n\r\nconst HeaderBrand = styled.span`\r\n  font-family: Roboto;\r\n  font-size: 1.5em;\r\n  font-weight: 500;\r\n`\r\n\r\n\r\nclass Header extends React.Component {\r\n  render () {\r\n    return (\r\n      <HeaderContainer>\r\n        <HeaderBrand>Frello</HeaderBrand>\r\n        </HeaderContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\nimport TrelloList from './TrelloList';\nimport ActionButton from './ActionButton';\nimport Header from './Header';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport {connect} from \"react-redux\";\nimport {DragDropContext, Droppable} from \"react-beautiful-dnd\";\nimport {sort} from \"../actions\";\nimport styled from \"styled-components\";\n\n\nconst ListContainer = styled.div`\n      display: flex;\n      flex-direction: row;\n`;\n\nconst AppContainer = styled.div`\n      background-color: #686FFF;\n      min-width: calc(100vw - 2em);\n      min-height: calc(100vh - 5em);\n      padding: 1em;\n\n`;\n\nclass App extends Component {\n  onDragEnd = (result) => {\n    //Reordering logic to be done\n    const { destination, source, draggableId, type} = result;\n\n    if(!destination) {\n      return;\n    }\n\n    this.props.dispatch(sort(\n      source.droppableId,\n      destination.droppableId,\n      source.index,\n      destination.index,\n      draggableId,\n      type\n    ));\n  }\n\n  componentDidMount() {\n    document.title=\"(F)rello\";\n  }\n  render () {\n    const THEME = createTheme({\n      typography: {\n       \"fontFamily\": `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n       \"fontSize\": 14,\n       \"fontWeightLight\": 300,\n       \"fontWeightRegular\": 400,\n       \"fontWeightMedium\": 500\n      }\n    });\n\n    const {lists} = this.props;\n    return (\n      <div>\n      <Header />\n      <DragDropContext onDragEnd={this.onDragEnd}> \n      <AppContainer className=\"App\">\n        <ThemeProvider theme={THEME}>\n          <Droppable droppableId=\"all-list\" direction=\"horizontal\" type=\"list\">\n            {provided => (         \n          <ListContainer {...provided.droppableProps} ref={provided.innerRef}>\n          {lists.map((list,index) => (\n          <TrelloList key={list.id} listId={list.id} title={list.title} cards={list.cards} index={index} />\n          ))}\n          {provided.placeholder}\n          <ActionButton list />\n          </ListContainer>\n          )}\n          </Droppable>\n        </ThemeProvider>\n      </AppContainer>\n      </DragDropContext>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  listsContainer: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n}\n\nconst mapStateToProps = state => ({\n  lists: state.lists\n})\n\nexport default connect(mapStateToProps) (App);\n","import {CONSTANTS} from \"../actions\";\r\nlet listId = 2;\r\nlet cardId = 5;\r\nconst initialState = [\r\n  {\r\n    title: \"(F)rello\",\r\n    id: `list-${0}`,\r\n    cards: [\r\n      {\r\n        id: `card-${0}`,\r\n        text: \"This is a project where I wanted to work on creating interable UIs using React.\"\r\n      },\r\n      {\r\n        id: `card-${1}`,\r\n        text: \"I used React, React-Redux, react-beautiful-dnd and Material UI to create this.\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: \"Limitations\",\r\n    id: `list-${1}`,\r\n    cards: [\r\n      {\r\n        id: `card-${2}`,\r\n        text: \"This is just a small project and I haven't yet hooked it up to a backend to persist the lists.\"\r\n      },\r\n      {\r\n        id: `card-${3}`,\r\n        text: \"I plan to expand on this by adding the ability to create multiple boards and switch between them using an expandable sidebar.\"\r\n      },\r\n      {\r\n        id: `card-${4}`,\r\n        text: \"You can add new cards, create a new list and move cards and lists around the area.\"\r\n      }\r\n    ]\r\n  }  \r\n]\r\n\r\nconst listsReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case CONSTANTS.ADD_LIST:\r\n      const newList = {\r\n        title: action.payload,\r\n        cards: [],\r\n        id: `list-${listId}`\r\n      }\r\n      listId += 1;\r\n      return [...state, newList];\r\n\r\n    case CONSTANTS.ADD_CARD: {\r\n      const newCard = {\r\n        text: action.payload.text,\r\n        id: `card-${cardId}`\r\n      }\r\n      cardId+= 1;\r\n      console.log(\"Action received\", action);\r\n      const newState = state.map(list => {\r\n        if(list.id === action.payload.listId) {\r\n          return {\r\n            ...list,\r\n            cards: [...list.cards, newCard]\r\n          }\r\n        } else {\r\n          return list;\r\n        }\r\n      })\r\n      return newState;\r\n    }\r\n\r\n    case CONSTANTS.DRAG_HAPPENED:\r\n      const {\r\n        droppableIdStart,\r\n        droppableIdEnd,\r\n        droppableIndexStart,\r\n        droppableIndexEnd,\r\n        draggableId,\r\n        type\r\n      } = action.payload;\r\n      const newState = [...state];\r\n      //Dragging list\r\n\r\n      if(type === \"list\") {\r\n        const list = newState.splice(droppableIndexStart, 1);\r\n        newState.splice(droppableIndexEnd, 0, ...list);\r\n        return newState;\r\n      }\r\n\r\n      //When card is dropped within the same list\r\n      if (droppableIdStart === droppableIdEnd) {\r\n        const list = state.find(list => droppableIdStart === list.id);\r\n        const card = list.cards.splice(droppableIndexStart, 1);\r\n        list.cards.splice(droppableIndexEnd, 0, ...card)\r\n      }\r\n\r\n      //When dropped into another list\r\n      if (droppableIdStart !== droppableIdEnd) {\r\n        //Find id of the list where the drag started\r\n        const listStart = state.find(list => droppableIdStart === list.id);\r\n        //Remove the card from the cards array\r\n        const card = listStart.cards.splice(droppableIndexStart, 1);\r\n        //Find the list where the drag ended\r\n        const listEnd = state.find(list => droppableIdEnd === list.id);\r\n\r\n        //Put the card in the new list\r\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card)\r\n      }\r\n      return newState;\r\n       \r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default listsReducer;","import {combineReducers} from 'redux';\r\nimport listsReducer from './listsReducer';\r\n\r\nexport default combineReducers({\r\n  lists: listsReducer\r\n});","import { createStore } from 'redux';\r\n\r\nimport rootReducer from \"../reducers\"\r\n\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store;","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from 'react-redux';\nimport App from \"./components/App\";\nimport store from \"./store\";\nimport './app.css';\nconst rootElement = document.getElementById(\"root\");\n\n\nReactDOM.render(\n  \n  <StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </StrictMode>,\n  rootElement\n);\n\n\n"],"sourceRoot":""}