{"version":3,"sources":["actions/listsActions.js","actions/cardActions.js","actions/index.js","components/TrelloCard.js","components/ActionButton.js","components/TrelloList.js","components/Header.js","components/Sidebar.js","components/App.js","reducers/listsReducer.js","reducers/index.js","store/index.js","index.js"],"names":["addList","title","type","CONSTANTS","ADD_LIST","payload","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","DRAG_HAPPENED","addCard","listId","text","ADD_CARD","DELETE_CARD","CardContainer","styled","div","TrelloCard","props","state","notify","isOpen","message","deleteCard","bind","console","log","String","this","id","index","provided","ref","innerRef","draggableProps","dragHandleProps","sx","maxWidth","CardContent","style","display","Typography","fontSize","color","gutterBottom","AlertDialog","marginLeft","list","yesFunction","React","Component","useState","open","setOpen","dispatch","useDispatch","handleClose","Icon","cursor","onClick","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","cardId","autoFocus","connect","ActionButton","formOpen","openForm","setState","closeForm","e","handleInputChange","target","value","handleAddList","handleAddCard","renderAddButton","buttonText","buttonTextOpacity","buttonTextColor","buttonTextBackground","styles","openFormButtonGroup","opacity","background","renderForm","placeholder","buttonTitle","overflow","minHeight","width","padding","marginBottom","onBlur","onChange","resize","outline","border","variant","backgroundColor","onMouseDown","alignItems","borderRadius","height","paddingLeft","formButtonGroup","marginTop","List","Title","h4","container","marginRight","fontFamily","card","TrelloList","cards","droppableId","droppableProps","map","HeaderContainer","HeaderBrand","span","Header","SidebarContainer","Sidebar","MainContainer","ListContainer","AppContainer","App","onDragEnd","result","destination","source","document","THEME","createTheme","typography","lists","className","ThemeProvider","theme","direction","initialState","listsReducer","action","newList","newCard","newState","Card","find","splice","listStart","listEnd","combineReducers","store","createStore","rootReducer","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.9cbf2787.chunk.js","sourcesContent":["import {CONSTANTS} from \"../actions\";\r\n\r\nexport const addList = (title) => {\r\n  return {\r\n    type: CONSTANTS.ADD_LIST,\r\n    payload: title\r\n  };\r\n};\r\n\r\nexport const sort = (\r\n  droppableIdStart,\r\n  droppableIdEnd,\r\n  droppableIndexStart,\r\n  droppableIndexEnd,\r\n  draggableId,\r\n  type\r\n) => {\r\n  return {\r\n    type: CONSTANTS.DRAG_HAPPENED,\r\n    payload: {\r\n      droppableIdStart,\r\n      droppableIdEnd,\r\n      droppableIndexStart,\r\n      droppableIndexEnd,\r\n      draggableId,\r\n      type\r\n    }\r\n  }\r\n}\r\n\r\n","import {CONSTANTS} from \"../actions\";\r\n\r\nexport const addCard = (listId, text) => {\r\n  return {\r\n    type: CONSTANTS.ADD_CARD,\r\n    payload: {listId, text}\r\n  };\r\n};\r\n\r\nexport const deleteCard = (listId, cardId) => {\r\n  return {\r\n    type: CONSTANTS.DELETE_CARD,\r\n    payload: {listId, cardId}\r\n  }\r\n}","export * from \"./listsActions\";\r\nexport * from \"./cardActions\";\r\nexport const CONSTANTS = {\r\n  ADD_CARD: \"ADD_CARD\",\r\n  DELETE_CARD: \"DELETE_CARD\",\r\n  ADD_LIST: \"ADD_LIST\",\r\n  DRAG_HAPPENED: \"DRAG_HAPPENED\"\r\n}","import React from 'react'\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport {Draggable} from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteCard } from \"../actions\";\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { useDispatch } from 'react-redux'\r\n\r\n\r\nconst CardContainer = styled.div`\r\n  margin-bottom: .5em;\r\n`\r\n\r\n\r\nclass TrelloCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      notify: {\r\n      isOpen: false,\r\n      message: '',\r\n      type: ''\r\n      }\r\n    }\r\n\r\n    this.deleteCard = this.deleteCard.bind(this);\r\n  }\r\n  \r\n// const TrelloCard = ({id, message, index, list}) => {\r\n  deleteCard() {\r\n    console.log(\"Delete card button pressed\");\r\n    // const { dispatch } = this.props;\r\n    return;\r\n    // dispatch(deleteCard(this.props.list, this.props.index));\r\n    \r\n  }\r\n\r\n\r\n  render () {\r\n  return (\r\n    <Draggable draggableId={String(this.props.id)} index={this.props.index}>\r\n      { (provided) => (\r\n        <CardContainer ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n        <Card key={this.props.id} sx={{ maxWidth: 300 }}>\r\n        <CardContent style={{display: \"flex\"}}>\r\n          <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n            {this.props.message}\r\n          </Typography>\r\n          \r\n\r\n          < AlertDialog style={{marginLeft: \"auto\"}} list={this.props.list} index={this.props.index} yesFunction={this.deleteCard}/>\r\n        </CardContent>\r\n        \r\n        </Card>\r\n        </CardContainer>\r\n        \r\n      )}\r\n    </Draggable>\r\n    )\r\n  }\r\n}\r\n\r\nfunction AlertDialog(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const list = props.list;\r\n  const index = props.index;\r\n  const localFunction = props.deleteCard;\r\n  const dispatch = useDispatch();\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    \r\n    setOpen(false);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    console.log(\"User has confirmed deletion of\", list, \"index\", index);\r\n    dispatch(deleteCard(list, index));\r\n    setOpen(false);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div style={{marginLeft: \"auto\"}}>\r\n      <Icon fontSize='small' style={{marginLeft: 8, cursor: \"pointer\", color: \"red\"}} onClick={handleClickOpen}>\r\n        close\r\n      </Icon>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Delete this task?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure you want to delete this task? This cannot be undone.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>No</Button>\r\n          <Button key=\"yes\" onClick={handleConfirm} autoFocus>\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect() (TrelloCard);","import React from 'react';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Card from '@mui/material/Card';\r\nimport TextArea from 'react-textarea-autosize';\r\n// import CardActions from '@mui/material/CardActions';\r\n// import CardContent from '@mui/material/CardContent';\r\nimport Modal from '@mui/material/Modal'\r\nimport Button from '@mui/material/Button';\r\nimport styled from 'styled-components';\r\n// import Typography from '@mui/material/Typography';\r\nimport { connect } from \"react-redux\";\r\nimport { addList, addCard } from \"../actions\";\r\n\r\nconst  openFormButtonGroup = styled.div`\r\n    display: \"flex\";\r\n    align-items: \"center\";\r\n    cursor: \"pointer\";\r\n    border-radius: 3px;\r\n    height: 36px;\r\n    width: 300px;\r\n    padding-left: 10px;\r\n  `\r\nconst formButtonGroup = styled.div`\r\n    margin-top: 8px;\r\n    display: flex;\r\n    alignItems: center;\r\n`\r\nclass ActionButton extends React.Component {\r\n  state = {\r\n    formOpen: false,\r\n    text: \"\"\r\n  }\r\n\r\n  openForm = () => {\r\n    this.setState({formOpen: true});\r\n  }\r\n\r\n  closeForm = (e) => {\r\n    this.setState({formOpen: false});\r\n  }\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({\r\n      text: e.target.value\r\n    })\r\n  }\r\n\r\n  handleAddList = () => {\r\n    const { dispatch } = this.props;\r\n    const {text} = this.state;\r\n\r\n    if (text) {\r\n      this.setState({\r\n        text: \"\"\r\n      })\r\n      dispatch(addList(text))\r\n\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  handleAddCard = () => {\r\n    const { dispatch, listId } = this.props;\r\n    const { text } = this.state;\r\n    if (text) {\r\n      this.setState({\r\n        text: \"\"\r\n      })\r\n      dispatch(addCard(listId, text))\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  renderAddButton = () => {\r\n    const { list } = this.props;\r\n    const buttonText = list ? \"Add another list\" : \"Add another card\";\r\n    const buttonTextOpacity = list ? 1 : 0.5;\r\n    const buttonTextColor = list ? \"white\" : \"inherit\";\r\n    const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\r\n    return (\r\n        <div \r\n              onClick={this.openForm}\r\n              style={{\r\n                    ...styles.openFormButtonGroup,\r\n                    opacity:  buttonTextOpacity, \r\n                    color: buttonTextColor, \r\n                    background: buttonTextBackground\r\n              }}>\r\n        <Icon>add</Icon>\r\n        <p>{buttonText}</p>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  renderForm = () => {\r\n    const { list } = this.props;\r\n\r\n    const placeholder = list ? \"Enter list title...\" : \"Enter title for this card...\";\r\n    const buttonTitle = list ? \"Add List\" : \"Add Card\";\r\n    return (\r\n    <div> \r\n      <Card style={{\r\n                      overflow: \"visible\",\r\n                      minHeight: 80,\r\n                      width: 284,\r\n                      padding: \"6px 8px 2px\",\r\n                      marginBottom: 4\r\n                  }}>\r\n        <TextArea placeholder={placeholder} \r\n                  autoFocus onBlur={this.closeForm}\r\n                  value={this.state.text} \r\n                  onChange={this.handleInputChange}\r\n                  style={{\r\n                    resize: \"none\",\r\n                    width: \"100%\",\r\n                    outline: \"none\",\r\n                    border: \"none\",\r\n                    \r\n                  }}\r\n                  />\r\n      </Card>\r\n      <formButtonGroup>\r\n        {/* We use onMouseDown because it will fire before our onBlur function. */}\r\n        <Button variant=\"contained\" \r\n                style={{color: \"white\", backgroundColor:\"#5aac44\"}}\r\n                onMouseDown={list ? this.handleAddList : this.handleAddCard}>\r\n        {buttonTitle}\r\n        </Button>\r\n        <Icon style={{marginLeft: 8, cursor: \"pointer\", color: \"red\"}} onClick={this.closeForm}>close</Icon>\r\n      </formButtonGroup>\r\n    </div>\r\n    )\r\n  }\r\n\r\n  render () {\r\n    return this.state.formOpen ? this.renderForm() : this.renderAddButton();\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  openFormButtonGroup: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n    borderRadius: 3,\r\n    height: 36,\r\n    width: 300,\r\n    paddingLeft: 10\r\n  },\r\n  formButtonGroup: {\r\n    marginTop: 8,\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n}\r\n\r\n\r\nexport default connect() (ActionButton);","import { black } from 'material-ui/styles/colors';\r\n// import {boxShadow} from 'jss-plugin-expand';\r\nimport React from 'react';\r\nimport Card from './TrelloCard';\r\nimport ActionButton from './ActionButton';\r\nimport {Droppable, Draggable} from 'react-beautiful-dnd';\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst List = styled.div`\r\n    background-color: #dfe3e6;\r\n    border-radius: .4em;\r\n    width: 300px;\r\n    height: 100%;\r\n    padding: .5em;\r\n    margin-right: .5em;\r\n\r\n    @media (max-width: 500px) {\r\n      width: calc(100vw - 7em);\r\n      margin-bottom: 1em;\r\n    }\r\n    @media (max-width: 400px) {\r\n      width: calc(100vw - 5em);\r\n    }\r\n`\r\n\r\nconst Title = styled.h4`\r\n  font-family: \"Roboto\";\r\n`\r\n\r\nconst TrelloList = ({title, cards, listId, index}) => {\r\n  \r\n  return (\r\n    <Draggable draggableId={String(listId)} index={index}>\r\n      {(provided) => (\r\n    <List {...provided.draggableProps} ref={provided.innerRef} {...provided.dragHandleProps}>\r\n    <Droppable droppableId={String(listId)}>\r\n      {/* Everything inside a droppable must be within a React render props function */}\r\n      {(provided) => (\r\n         <div {...provided.droppableProps} ref={provided.innerRef}> \r\n          <Title>{title}</Title>\r\n          {cards.map((card, index) => (< Card list={listId} message={card.text} key={card.id} id={card.id} style={styles.card} index={index} />\r\n          ))}\r\n          {provided.placeholder}\r\n          < ActionButton listId={listId} />\r\n        </div> \r\n      )}\r\n    </Droppable>\r\n    </List>\r\n    )}\r\n    </Draggable>\r\n    \r\n  )\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    backgroundColor: \"#dfe3e6\",\r\n    borderRadius: 3,\r\n    width: 300,\r\n    height: \"100%\",\r\n    padding: 8,\r\n    marginRight: 8,\r\n    marginBottom: 8\r\n  },\r\n\r\n  title: {\r\n    fontFamily: \"Roboto\"\r\n  },\r\n\r\n  card: {\r\n    marginBottom: 8\r\n  }\r\n}\r\n\r\nexport default TrelloList;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HeaderContainer = styled.div`\r\n  background-color: #343880;\r\n  height: 3em;\r\n  min-width: calc(100vw -1em);\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 1em;\r\n`\r\n\r\nconst HeaderBrand = styled.span`\r\n  font-family: Roboto;\r\n  font-size: 1.5em;\r\n  font-weight: 500;\r\n`\r\n\r\n\r\nclass Header extends React.Component {\r\n  render () {\r\n    return (\r\n      <HeaderContainer>\r\n        <HeaderBrand>Frello</HeaderBrand>\r\n        </HeaderContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SidebarContainer = styled.div`\r\n  width: 3em;\r\n  flex-shrink: 0;\r\n  background: rgb(84,90,204);\r\n  background: linear-gradient(90deg, rgba(84,90,204,1) 81%, rgba(96,103,231,1) 100%); \r\n  min-height: calc(100vh - 5em);\r\n  @media (max-width: 500px) {\r\n    width:2em;\r\n  }\r\n`\r\n\r\n\r\nclass Sidebar extends React.Component {\r\n  render () {\r\n    return (\r\n      <SidebarContainer>\r\n        \r\n      </SidebarContainer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Sidebar","import React, {Component} from 'react';\nimport TrelloList from './TrelloList';\nimport ActionButton from './ActionButton';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport {connect} from \"react-redux\";\nimport {DragDropContext, Droppable} from \"react-beautiful-dnd\";\nimport {sort} from \"../actions\";\nimport styled from \"styled-components\";\n\nconst MainContainer = styled.div`\n  display: flex;\n`\n\n\nconst ListContainer = styled.div`\n      display: flex;\n      flex-direction: row;\n      @media (max-width: 500px) {\n        flex-direction: column;\n        flex-wrap: wrap;\n    }\n`;\n\nconst AppContainer = styled.div`\n      background-color: #686FFF;\n      min-width: calc(100vw - 5em);\n      min-height: calc(100vh - 5em);\n      padding: 1em;\n\n`;\n\nclass App extends Component {\n  onDragEnd = (result) => {\n    //Reordering logic to be done\n    const { destination, source, draggableId, type} = result;\n\n    if(!destination) {\n      return;\n    }\n\n    this.props.dispatch(sort(\n      source.droppableId,\n      destination.droppableId,\n      source.index,\n      destination.index,\n      draggableId,\n      type\n    ));\n  }\n\n  componentDidMount() {\n    document.title=\"(F)rello\";\n  }\n  render () {\n    const THEME = createTheme({\n      typography: {\n       \"fontFamily\": `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n       \"fontSize\": 14,\n       \"fontWeightLight\": 300,\n       \"fontWeightRegular\": 400,\n       \"fontWeightMedium\": 500\n      }\n    });\n\n    const {lists} = this.props;\n    return (\n      <div>\n      <Header />\n      <MainContainer>\n      <Sidebar />\n      <DragDropContext onDragEnd={this.onDragEnd}> \n      <AppContainer className=\"App\">\n        <ThemeProvider theme={THEME}>\n          <Droppable droppableId=\"all-list\" direction=\"horizontal\" type=\"list\">\n            {provided => (\n                      \n          <ListContainer {...provided.droppableProps} ref={provided.innerRef}>\n          {lists.map((list,index) => (\n          <TrelloList key={list.id} listId={list.id} title={list.title} cards={list.cards} index={index} />\n          ))}\n          {provided.placeholder}\n          <ActionButton list />\n          </ListContainer>\n          \n          )}\n          </Droppable>\n        </ThemeProvider>\n      </AppContainer>\n      </DragDropContext>\n      </MainContainer>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  listsContainer: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n}\n\nconst mapStateToProps = state => ({\n  lists: state.lists\n})\n\nexport default connect(mapStateToProps) (App);\n","import {CONSTANTS} from \"../actions\";\r\n// import initialState from \"./initLists\";\r\n\r\nlet listId = 2;\r\nlet cardId = 5;\r\nconst initialState = [\r\n  {\r\n    title: \"(F)rello\",\r\n    id: `list-${0}`,\r\n    cards: [\r\n      {\r\n        id: `card-${0}`,\r\n        text: \"This is a project where I wanted to work on creating interable UIs using React.\"\r\n      },\r\n      {\r\n        id: `card-${1}`,\r\n        text: \"I used React, React-Redux, react-beautiful-dnd and Material UI to create this.\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: \"Limitations\",\r\n    id: `list-${1}`,\r\n    cards: [\r\n      {\r\n        id: `card-${2}`,\r\n        text: \"This is just a small project and I haven't yet hooked it up to a backend to persist the lists.\"\r\n      },\r\n      {\r\n        id: `card-${3}`,\r\n        text: \"I plan to expand on this by adding the ability to create multiple boards and switch between them using an expandable sidebar.\"\r\n      },\r\n      {\r\n        id: `card-${4}`,\r\n        text: \"You can add new cards, create a new list and move cards and lists around the area.\"\r\n      }\r\n    ]\r\n  }  \r\n]\r\n\r\nconst listsReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case CONSTANTS.ADD_LIST:\r\n      const newList = {\r\n        title: action.payload,\r\n        cards: [],\r\n        id: `list-${listId}`\r\n      }\r\n      listId += 1;\r\n      return [...state, newList];\r\n\r\n    case CONSTANTS.ADD_CARD: {\r\n      const newCard = {\r\n        text: action.payload.text,\r\n        id: `card-${cardId}`\r\n      }\r\n      cardId+= 1;\r\n      console.log(\"Action received\", action);\r\n      const newState = state.map(list => {\r\n        if(list.id === action.payload.listId) {\r\n          return {\r\n            ...list,\r\n            cards: [...list.cards, newCard]\r\n          }\r\n        } else {\r\n          return list;\r\n        }\r\n      })\r\n      return newState;\r\n    }\r\n\r\n    case CONSTANTS.DELETE_CARD: {\r\n      const Card = {\r\n        id: action.payload.cardId\r\n      }\r\n      console.log(\"Delete card action received\", action);\r\n      const newState = [...state];\r\n      const list = state.find(list => action.payload.listId === list.id);\r\n      list.cards.splice(Card.id, 1);\r\n\r\n      return newState;\r\n    }\r\n\r\n    case CONSTANTS.DRAG_HAPPENED:\r\n      const {\r\n        droppableIdStart,\r\n        droppableIdEnd,\r\n        droppableIndexStart,\r\n        droppableIndexEnd,\r\n        draggableId,\r\n        type\r\n      } = action.payload;\r\n      const newState = [...state];\r\n      //Dragging list\r\n\r\n      if(type === \"list\") {\r\n        const list = newState.splice(droppableIndexStart, 1);\r\n        newState.splice(droppableIndexEnd, 0, ...list);\r\n        return newState;\r\n      }\r\n\r\n      //When card is dropped within the same list\r\n      if (droppableIdStart === droppableIdEnd) {\r\n        const list = state.find(list => droppableIdStart === list.id);\r\n        const card = list.cards.splice(droppableIndexStart, 1);\r\n        list.cards.splice(droppableIndexEnd, 0, ...card)\r\n      }\r\n\r\n      //When dropped into another list\r\n      if (droppableIdStart !== droppableIdEnd) {\r\n        //Find id of the list where the drag started\r\n        const listStart = state.find(list => droppableIdStart === list.id);\r\n        //Remove the card from the cards array\r\n        const card = listStart.cards.splice(droppableIndexStart, 1);\r\n        //Find the list where the drag ended\r\n        const listEnd = state.find(list => droppableIdEnd === list.id);\r\n\r\n        //Put the card in the new list\r\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card)\r\n      }\r\n      return newState;\r\n       \r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default listsReducer;","import {combineReducers} from 'redux';\r\nimport listsReducer from './listsReducer';\r\n\r\nexport default combineReducers({\r\n  lists: listsReducer\r\n});","import { createStore } from 'redux';\r\n\r\nimport rootReducer from \"../reducers\"\r\n\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store;","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from 'react-redux';\nimport App from \"./components/App\";\nimport store from \"./store\";\nimport './app.css';\nconst rootElement = document.getElementById(\"root\");\n\n\nReactDOM.render(\n  \n  <StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </StrictMode>,\n  rootElement\n);\n\n\n"],"sourceRoot":""}